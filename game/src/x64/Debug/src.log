  texture.cpp
LINK : warning LNK4098: 默认库“LIBCMT”与其他库的使用冲突；请使用 /NODEFAULTLIB:library
LINK : warning LNK4217: 符号“__glewDeleteProgram”(在“ glew32s.lib(glew.obj)”中定义)已由“ResourceManager.obj”(函数“"public: static void __cdecl ResourceManager::Clear(void)" (?Clear@ResourceManager@@SAXXZ)”中)导入
LINK : warning LNK4217: 符号“__glewAttachShader”(在“ glew32s.lib(glew.obj)”中定义)已由“shader.obj”(函数“"public: void __cdecl Shader::Compile(char const *,char const *,char const *)" (?Compile@Shader@@QEAAXPEBD00@Z)”中)导入
LINK : warning LNK4217: 符号“__glewCompileShader”(在“ glew32s.lib(glew.obj)”中定义)已由“shader.obj”(函数“"public: void __cdecl Shader::Compile(char const *,char const *,char const *)" (?Compile@Shader@@QEAAXPEBD00@Z)”中)导入
LINK : warning LNK4217: 符号“__glewCreateProgram”(在“ glew32s.lib(glew.obj)”中定义)已由“shader.obj”(函数“"public: void __cdecl Shader::Compile(char const *,char const *,char const *)" (?Compile@Shader@@QEAAXPEBD00@Z)”中)导入
LINK : warning LNK4217: 符号“__glewCreateShader”(在“ glew32s.lib(glew.obj)”中定义)已由“shader.obj”(函数“"public: void __cdecl Shader::Compile(char const *,char const *,char const *)" (?Compile@Shader@@QEAAXPEBD00@Z)”中)导入
LINK : warning LNK4217: 符号“__glewDeleteShader”(在“ glew32s.lib(glew.obj)”中定义)已由“shader.obj”(函数“"public: void __cdecl Shader::Compile(char const *,char const *,char const *)" (?Compile@Shader@@QEAAXPEBD00@Z)”中)导入
LINK : warning LNK4217: 符号“__glewGetProgramInfoLog”(在“ glew32s.lib(glew.obj)”中定义)已由“shader.obj”(函数“"private: void __cdecl Shader::checkCompileErrors(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)" (?checkCompileErrors@Shader@@AEAAXIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)”中)导入
LINK : warning LNK4217: 符号“__glewGetProgramiv”(在“ glew32s.lib(glew.obj)”中定义)已由“shader.obj”(函数“"private: void __cdecl Shader::checkCompileErrors(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)" (?checkCompileErrors@Shader@@AEAAXIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)”中)导入
LINK : warning LNK4217: 符号“__glewGetShaderInfoLog”(在“ glew32s.lib(glew.obj)”中定义)已由“shader.obj”(函数“"private: void __cdecl Shader::checkCompileErrors(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)" (?checkCompileErrors@Shader@@AEAAXIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)”中)导入
LINK : warning LNK4217: 符号“__glewGetShaderiv”(在“ glew32s.lib(glew.obj)”中定义)已由“shader.obj”(函数“"private: void __cdecl Shader::checkCompileErrors(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)" (?checkCompileErrors@Shader@@AEAAXIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)”中)导入
LINK : warning LNK4217: 符号“__glewGetUniformLocation”(在“ glew32s.lib(glew.obj)”中定义)已由“shader.obj”(函数“"public: void __cdecl Shader::SetFloat(char const *,float,unsigned char)" (?SetFloat@Shader@@QEAAXPEBDME@Z)”中)导入
LINK : warning LNK4217: 符号“__glewLinkProgram”(在“ glew32s.lib(glew.obj)”中定义)已由“shader.obj”(函数“"public: void __cdecl Shader::Compile(char const *,char const *,char const *)" (?Compile@Shader@@QEAAXPEBD00@Z)”中)导入
LINK : warning LNK4217: 符号“__glewShaderSource”(在“ glew32s.lib(glew.obj)”中定义)已由“shader.obj”(函数“"public: void __cdecl Shader::Compile(char const *,char const *,char const *)" (?Compile@Shader@@QEAAXPEBD00@Z)”中)导入
LINK : warning LNK4217: 符号“__glewUniform1f”(在“ glew32s.lib(glew.obj)”中定义)已由“shader.obj”(函数“"public: void __cdecl Shader::SetFloat(char const *,float,unsigned char)" (?SetFloat@Shader@@QEAAXPEBDME@Z)”中)导入
LINK : warning LNK4217: 符号“__glewUniform1i”(在“ glew32s.lib(glew.obj)”中定义)已由“shader.obj”(函数“"public: void __cdecl Shader::SetInteger(char const *,int,unsigned char)" (?SetInteger@Shader@@QEAAXPEBDHE@Z)”中)导入
LINK : warning LNK4217: 符号“__glewUniform2f”(在“ glew32s.lib(glew.obj)”中定义)已由“shader.obj”(函数“"public: void __cdecl Shader::SetVector2f(char const *,float,float,unsigned char)" (?SetVector2f@Shader@@QEAAXPEBDMME@Z)”中)导入
LINK : warning LNK4217: 符号“__glewUseProgram”(在“ glew32s.lib(glew.obj)”中定义)已由“shader.obj”(函数“"public: class Shader & __cdecl Shader::Use(void)" (?Use@Shader@@QEAAAEAV1@XZ)”中)导入
main.obj : error LNK2019: 无法解析的外部符号 "void __cdecl key_callback(struct GLFWwindow *,int,int,int,int)" (?key_callback@@YAXPEAUGLFWwindow@@HHHH@Z)，函数 main 中引用了该符号
D:\project\opengl_tutorial\game\x64\Debug\src.exe : fatal error LNK1120: 1 个无法解析的外部命令
